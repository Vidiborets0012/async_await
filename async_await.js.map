{"version":3,"file":"async_await.js","sources":["../src/js/async_await.js"],"sourcesContent":["//Синтаксис async/await\n\n//Асинхронні функції\n\n/*\nasync function fetchData() {\n\t// ...\n}\n\nconst fetchData = async function() {\n\t// ...\n}\n\nconst fetchData = async () => {\n\t// ...\n}\n\nconst user = {\n  async getUsername() {\n    // ...\n  },\n};\n\nclass User {\n  async getUsername() {\n    // ...\n  }\n}\n\n*/\n\n// const foo = async () => {\n//   return 5;\n// };\n\n// foo().then(value => {\n//   console.log(value); // 5\n// });\n// console.log(foo()); //Promise {<fulfilled>: 5}\n\n// const foo1 = async () => {\n//   // Не вказуємо значення для повернення\n// };\n\n// foo1().then(value => {\n//   console.log(value); // undefined\n// });\n// console.log(foo1()); //Promise {<fulfilled>: undefined}\n\nconsole.log('**********************');\n\n//Оператор await\n\nconst foo = async () => {\n  console.log('Before await');\n\n  const promiseValue = await new Promise(resolve => {\n    setTimeout(() => resolve(5), 2000);\n  });\n\n  console.log('After await', promiseValue);\n};\n\nfoo(); // через 2 секунди виведеться в консоль  \"After await\" 5\nconsole.log(foo());\n\nconsole.log('**********************');\n\n//Використання async/await при роботі з HTTP-запитами\n\nimport axios from 'axios';\n\nconst fetchUsers = () => {\n  axios.get('https://jsonplaceholder.typicode.com/users').then(response => {\n    console.log(response.data);\n  });\n};\n\nfetchUsers();\n//*****************************\n\nconst fetchUsers1 = async () => {\n  const response = await axios.get(\n    'https://jsonplaceholder.typicode.com/users'\n  );\n  console.log(response.data);\n  return response.data;\n};\n\n// fetchUsers1();\n// console.log(fetchUsers1()); //Promise {<pending>}\n\nfetchUsers1().then(users => console.log(users));\n\nconsole.log('**********************');\n//Конструкція try…catch\n\n/*\ntry {\n  // Код, у якому можуть виникнути помилки\n} catch (error) {\n  // Код для обробки помилок, що виникли у блоці try\n}\n*/\n\nconsole.log('Before try...catch');\n\ntry {\n  const result = 10 / 0;\n  console.log(result); // Цей рядок не виконається через помилку\n} catch (error) {\n  // Обробимо помилку\n  console.error(error.message);\n}\n\nconsole.log('After try...catch');\n\nconsole.log('**********************');\n//Обробка помилок\n//1. Обробка помилок у самій функції (try...catch)\n\nconst fetchUsers3 = async () => {\n  try {\n    const response = await axios.get(\n      'https://jsonplaceholder.typicode.com/users'\n    );\n    console.log(response.data);\n  } catch (error) {\n    console.log('Помилка при отриманні користувачів:', error);\n  }\n};\n\nfetchUsers3();\n\n//*************************************\n\n// 2. Обробка помилок у .catch() зовні\n\nconst fetchUsers4 = async () => {\n  const response = await axios.get(\n    'https://jsonplaceholder.typicode.com/users'\n  );\n  return response.data;\n};\n\nfetchUsers4()\n  .then(users => console.log(users))\n  .catch(error => console.log('Помилка:', error));\n\n//*************************************\n// 3. Обробка помилок в іншій асинхронній функції (try...catch)\n\nconst fetchUsers5 = async () => {\n  const response = await axios.get(\n    'https://jsonplaceholder.typicode.com/users'\n  );\n  return response.data;\n};\n\nconst doStuff = async () => {\n  try {\n    const users = await fetchUsers5();\n    console.log(users);\n  } catch (error) {\n    console.log('Помилка в doStuff:', error);\n  }\n};\n\ndoStuff();\nconsole.log(doStuff()); //Promise {<pending>}\n"],"names":["foo","promiseValue","resolve","fetchUsers","axios","response","fetchUsers1","users","error","fetchUsers3","fetchUsers4","fetchUsers5","doStuff"],"mappings":"oGAiDA,QAAQ,IAAI,wBAAwB,EAIpC,MAAMA,EAAM,SAAY,CACtB,QAAQ,IAAI,cAAc,EAE1B,MAAMC,EAAe,MAAM,IAAI,QAAQC,GAAW,CAChD,WAAW,IAAMA,EAAQ,CAAC,EAAG,GAAI,CACrC,CAAG,EAED,QAAQ,IAAI,cAAeD,CAAY,CACzC,EAEAD,IACA,QAAQ,IAAIA,EAAG,CAAE,EAEjB,QAAQ,IAAI,wBAAwB,EAMpC,MAAMG,EAAa,IAAM,CACvBC,EAAM,IAAI,4CAA4C,EAAE,KAAKC,GAAY,CACvE,QAAQ,IAAIA,EAAS,IAAI,CAC7B,CAAG,CACH,EAEAF,IAGA,MAAMG,EAAc,SAAY,CAC9B,MAAMD,EAAW,MAAMD,EAAM,IAC3B,4CACJ,EACE,eAAQ,IAAIC,EAAS,IAAI,EAClBA,EAAS,IAClB,EAKAC,EAAa,EAAC,KAAKC,GAAS,QAAQ,IAAIA,CAAK,CAAC,EAE9C,QAAQ,IAAI,wBAAwB,EAWpC,QAAQ,IAAI,oBAAoB,EAEhC,GAAI,CAEF,QAAQ,IAAI,GAAM,CACpB,OAASC,EAAO,CAEd,QAAQ,MAAMA,EAAM,OAAO,CAC7B,CAEA,QAAQ,IAAI,mBAAmB,EAE/B,QAAQ,IAAI,wBAAwB,EAIpC,MAAMC,EAAc,SAAY,CAC9B,GAAI,CACF,MAAMJ,EAAW,MAAMD,EAAM,IAC3B,4CACN,EACI,QAAQ,IAAIC,EAAS,IAAI,CAC1B,OAAQG,EAAO,CACd,QAAQ,IAAI,sCAAuCA,CAAK,CACzD,CACH,EAEAC,IAMA,MAAMC,EAAc,UACD,MAAMN,EAAM,IAC3B,4CACJ,GACkB,KAGlBM,EAAa,EACV,KAAKH,GAAS,QAAQ,IAAIA,CAAK,CAAC,EAChC,MAAMC,GAAS,QAAQ,IAAI,WAAYA,CAAK,CAAC,EAKhD,MAAMG,EAAc,UACD,MAAMP,EAAM,IAC3B,4CACJ,GACkB,KAGZQ,EAAU,SAAY,CAC1B,GAAI,CACF,MAAML,EAAQ,MAAMI,IACpB,QAAQ,IAAIJ,CAAK,CAClB,OAAQC,EAAO,CACd,QAAQ,IAAI,qBAAsBA,CAAK,CACxC,CACH,EAEAI,IACA,QAAQ,IAAIA,EAAO,CAAE"}