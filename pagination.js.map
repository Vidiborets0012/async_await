{"version":3,"file":"pagination.js","sources":["../src/js/pagination.js"],"sourcesContent":["//Пагінація\nimport axios from 'axios';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n//Колекції та групи\n\n// const fetchPosts = async () => {\n//   const response = await axios.get(\n//     'https://jsonplaceholder.typicode.com/posts'\n//   );\n//   console.log('Posts: ', response.data);\n// };\n\n// fetchPosts();\n\n// const fetchPosts1 = async () => {\n//   const response = await axios.get(\n//     'https://jsonplaceholder.typicode.com/posts?_limit=5'\n//   );\n//   console.log('Posts: ', response.data);\n// };\n\n// fetchPosts1();\n\n/***************************** */\nconsole.log('************************');\n/*\nconst fetchPostsBtn = document.querySelector('.btn');\nconst postList = document.querySelector('.posts');\n\nfetchPostsBtn.addEventListener('click', async () => {\n  try {\n    const posts = await fetchPosts();\n    renderPosts(posts);\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nasync function fetchPosts() {\n  // Change the number of items in the group here\n  const response = await axios.get(\n    'https://jsonplaceholder.typicode.com/posts?_limit=5'\n  );\n  return response.data;\n}\n\nfunction renderPosts(posts) {\n  const markup = posts\n    .map(({ id, title, body, userId }) => {\n      return `<li>\n          <h2 class=\"post-title\">${title.slice(0, 30)}</h2>\n          <p><b>Post id</b>: ${id}</p>\n          <p><b>Author id</b>: ${userId}</p>\n          <p>${body}</p>\n        </li>`;\n    })\n    .join('');\n  postList.innerHTML = markup;\n}\n*/\n\n/***************************** */\nconsole.log('************************');\n//Номер групи елементів\n\n// const fetchPosts = async () => {\n//   const response = await axios.get(\n//     'https://jsonplaceholder.typicode.com/posts?_limit=5&_page=3'\n//   );\n//   console.log('Posts: ', response.data);\n// };\n/*\nconst fetchPostsBtn = document.querySelector('.btn');\nconst postList = document.querySelector('.posts');\n\nfetchPostsBtn.addEventListener('click', async () => {\n  try {\n    const posts = await fetchPosts();\n    renderPosts(posts);\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nasync function fetchPosts() {\n  const params = new URLSearchParams({\n    _limit: 5,\n    // Change the group number here\n    _page: 3,\n  });\n\n  const response = await axios.get(\n    `https://jsonplaceholder.typicode.com/posts?${params}`\n  );\n  return response.data;\n}\n\nfunction renderPosts(posts) {\n  const markup = posts\n    .map(({ id, title, body, userId }) => {\n      return `<li>\n          <h2 class=\"post-title\">${title.slice(0, 30)}</h2>\n          <p><b>Post id</b>: ${id}</p>\n          <p><b>Author id</b>: ${userId}</p>\n          <p class=\"post-body\">${body}</p>\n        </li>`;\n    })\n    .join('');\n  postList.innerHTML = markup;\n}\n*/\n\n/***************************** */\nconsole.log('************************');\n//Прийом «Завантажити ще»\n\n/*\nconst fetchPostsBtn = document.querySelector('.btn');\nconst postList = document.querySelector('.posts');\n\n// Controls the group number\nlet page = 1;\n// Controls the number of items in the group\nlet perPage = 10;\n\nfetchPostsBtn.addEventListener('click', async () => {\n  try {\n    const posts = await fetchPosts();\n    renderPosts(posts);\n    // Increase the group number\n    page += 1;\n\n    // Replace button text after first request\n    if (page > 1) {\n      fetchPostsBtn.textContent = 'Fetch more posts';\n    }\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nasync function fetchPosts() {\n  const params = new URLSearchParams({\n    _limit: perPage,\n    _page: page,\n  });\n\n  const response = await axios.get(\n    `https://jsonplaceholder.typicode.com/posts?${params}`\n  );\n  return response.data;\n}\n\nfunction renderPosts(posts) {\n  const markup = posts\n    .map(({ id, title, body, userId }) => {\n      return `<li>\n          <h2 class=\"post-title\">${title.slice(0, 30)}</h2>\n          <p><b>Post id</b>: ${id}</p>\n          <p><b>Author id</b>: ${userId}</p>\n          <p class=\"post-body\">${body}</p>\n        </li>`;\n    })\n    .join('');\n  postList.insertAdjacentHTML('beforeend', markup);\n}\n*/\n\n/***************************** */\nconsole.log('************************');\n//Перевірка кінця колекції\n\nconst fetchPostsBtn = document.querySelector('.btn');\nconst postList = document.querySelector('.posts');\n\n// Controls the group number\nlet page = 1;\n// Controls the number of items in the group\nlet limit = 40;\n// In our case total number of pages is calculated on frontend\nconst totalPages = Math.ceil(100 / limit);\n\nfetchPostsBtn.addEventListener('click', async () => {\n  // Check the end of the collection to display an alert\n  if (page > totalPages) {\n    return iziToast.error({\n      position: 'topRight',\n      message: \"We're sorry, there are no more posts to load\",\n    });\n  }\n\n  try {\n    const posts = await fetchPosts();\n    renderPosts(posts);\n    // Increase the group number\n    page += 1;\n\n    // Replace button text after first request\n    if (page > 1) {\n      fetchPostsBtn.textContent = 'Fetch more posts';\n    }\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nasync function fetchPosts() {\n  const params = new URLSearchParams({\n    _limit: limit,\n    _page: page,\n  });\n\n  const response = await axios.get(\n    `https://jsonplaceholder.typicode.com/posts?${params}`\n  );\n  return response.data;\n}\n\nfunction renderPosts(posts) {\n  const markup = posts\n    .map(({ id, title, body, userId }) => {\n      return `<li>\n          <h2 class=\"post-title\">${title.slice(0, 30)}</h2>\n          <p><b>Post id</b>: ${id}</p>\n          <p><b>Author id</b>: ${userId}</p>\n          <p class=\"post-body\">${body}</p>\n        </li>`;\n    })\n    .join('');\n  postList.insertAdjacentHTML('beforeend', markup);\n}\n"],"names":["fetchPostsBtn","postList","page","limit","totalPages","iziToast","posts","fetchPosts","renderPosts","error","params","axios","markup","id","title","body","userId"],"mappings":"2GA0BA,QAAQ,IAAI,0BAA0B,EAsCtC,QAAQ,IAAI,0BAA0B,EAmDtC,QAAQ,IAAI,0BAA0B,EAwDtC,QAAQ,IAAI,0BAA0B,EAGtC,MAAMA,EAAgB,SAAS,cAAc,MAAM,EAC7CC,EAAW,SAAS,cAAc,QAAQ,EAGhD,IAAIC,EAAO,EAEPC,EAAQ,GAEZ,MAAMC,EAAa,KAAK,KAAK,IAAMD,CAAK,EAExCH,EAAc,iBAAiB,QAAS,SAAY,CAElD,GAAIE,EAAOE,EACT,OAAOC,EAAS,MAAM,CACpB,SAAU,WACV,QAAS,8CACf,CAAK,EAGH,GAAI,CACF,MAAMC,EAAQ,MAAMC,IACpBC,EAAYF,CAAK,EAEjBJ,GAAQ,EAGJA,EAAO,IACTF,EAAc,YAAc,mBAE/B,OAAQS,EAAO,CACd,QAAQ,IAAIA,CAAK,CAClB,CACH,CAAC,EAED,eAAeF,GAAa,CAC1B,MAAMG,EAAS,IAAI,gBAAgB,CACjC,OAAQP,EACR,MAAOD,CACX,CAAG,EAKD,OAHiB,MAAMS,EAAM,IAC3B,8CAA8CD,CAAM,EACxD,GACkB,IAClB,CAEA,SAASF,EAAYF,EAAO,CAC1B,MAAMM,EAASN,EACZ,IAAI,CAAC,CAAE,GAAAO,EAAI,MAAAC,EAAO,KAAAC,EAAM,OAAAC,CAAM,IACtB;AAAA,mCACsBF,EAAM,MAAM,EAAG,EAAE,CAAC;AAAA,+BACtBD,CAAE;AAAA,iCACAG,CAAM;AAAA,iCACND,CAAI;AAAA,cAEhC,EACA,KAAK,EAAE,EACVd,EAAS,mBAAmB,YAAaW,CAAM,CACjD"}